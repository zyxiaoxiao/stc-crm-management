<template>
	<div class="all-height flex-row">
		<div class="all-height flex-column main-card filter">
			<h4 class="title">部门列表(单选)</h4>
			<el-input v-model="filterText" placeholder="输入关键字进行过滤" />
			<el-scrollbar>
				<el-tree ref="treeRef" default-expand-all :data="data" :props="defaultProps" :filter-node-method="filterNode" />
			</el-scrollbar>
		</div>
		<div class="all-height flex-column main-card flex-1"></div>
	</div>
</template>

<script setup>
import { ref, watch } from "vue";
const treeRef = ref();
const filterText = ref("");
const defaultProps = {
	children: "children",
	label: "label"
};

watch(filterText, val => {
	treeRef.value.filter(val);
});

const filterNode = (value, data) => {
	if (!value) return true;
	return data.label.includes(value);
};

const data = [
	{
		id: 1,
		label: "Level one 1",
		children: [
			{
				id: 4,
				label: "Level two 1-1",
				children: [
					{
						id: 9,
						label: "Level three 1-1-1"
					},
					{
						id: 10,
						label: "Level three 1-1-2"
					}
				]
			}
		]
	},
	{
		id: 2,
		label: "Level one 2",
		children: [
			{
				id: 5,
				label: "Level two 2-1"
			},
			{
				id: 6,
				label: "Level two 2-2"
			}
		]
	},
	{
		id: 3,
		label: "Level one 3",
		children: [
			{
				id: 7,
				label: "Level two 3-1"
			},
			{
				id: 8,
				label: "Level two 3-2"
			}
		]
	}
];
</script>

<style lang="scss">
.filter {
	width: 220px;
	height: 100%;
	padding: 18px;
	margin-right: 10px;
	.title {
		margin: 0 0 15px;
		font-size: 18px;
		font-weight: 700;
		color: var(--el-color-info-dark-2);
		letter-spacing: 0.5px;
	}
	.el-tree-node__content {
		height: 32px;
	}
	.el-input {
		margin: 0 0 15px;
	}
	.el-tree--highlight-current {
		.el-tree-node.is-current > .el-tree-node__content {
			background-color: var(--el-color-primary);
		}
	}
}
</style>
